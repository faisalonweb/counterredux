{"version":3,"sources":["App.js","actions/index.js","reportWebVitals.js","reducers/counter.js","reducers/isLogged.js","reducers/index.js","index.js"],"names":["App","counter","useSelector","state","loggedStatus","islogged","dispatch","useDispatch","className","onClick","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","counterReducer","action","console","log","loggedReducer","allReducers","combineReducers","middleware","thunk","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAoCgBA,MA9BhB,WACE,IAAMC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,WACrCG,EAAeF,aAAY,SAAAC,GAAK,OAAIA,EAAME,YAC1CC,EAAWC,cASjB,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,SAAf,UACA,qBAAKA,UAAU,SAAf,SACD,4CAAeP,OAEf,sBAAKO,UAAU,YAAf,UACA,wBAAQA,UAAU,UAAUC,QAdP,WACrBH,EAAS,CAACI,KCZW,eDyBrB,eACA,wBAAQF,UAAU,YAAYC,QAZP,WACxBH,EAAS,CAACI,KCdY,eDyBrB,kBAEA,qBAAKF,UAAU,SAAf,SACEJ,EAAe,2CAAqB,oDEjB5BO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCSCQ,EAhBQ,WAAwB,IAAvBjB,EAAsB,uDAAd,EAAGkB,EAAW,uCAI1C,OAAQA,EAAOX,MACX,IAAK,YAEF,OADAY,QAAQC,IAAIpB,GACLA,EAAM,EAChB,IAAK,YAEF,OADAmB,QAAQC,IAAIpB,GACLA,EAAM,EAChB,QACI,OAAOA,ICFJqB,EAVO,WAA0B,IAAzBrB,IAAwB,yDAAXkB,EAAW,uCAE1C,OAAOA,EAAOX,MACV,IAAK,UACD,OAAQP,EACZ,QACI,OAAOA,ICILsB,EANKC,YAAgB,CAChCzB,QAASmB,EACTf,SAAUmB,ICIRG,EAAa,C,KAACC,GACdC,EAAQC,YACZL,EAAaM,YAAQC,IAAe,WAAf,EAAmBL,GACxCM,OAAOC,8BAAgCD,OAAOC,iCAIhDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGFS,SAASC,eAAe,SAE1B5B,M","file":"static/js/main.47cb171d.chunk.js","sourcesContent":["import { useSelector,useDispatch } from 'react-redux';\nimport { increment,decrement } from './actions';\nimport './App.css';\n\n\n\nfunction App() {\n  const counter = useSelector(state => state.counter);\n  const loggedStatus = useSelector(state => state.islogged);\n  const dispatch = useDispatch();\n\n  const onClickDispatch = () => {\n     dispatch({type:increment});\n  }\n  const onClickDispatchDE = () => {\n    dispatch({type:decrement});\n }\n  \n  return (\n    <div className=\"App\">\n      <div className=\"secApp\">\n      <div className=\"result\"> \n     <h1>Counter : {counter}</h1>\n     </div>  \n     <div className=\"btn-class\">\n     <button className=\"add-btn\" onClick={onClickDispatch}>+</button>\n     <button className=\"del-class\" onClick={onClickDispatchDE}>-</button>\n     </div>\n     <div className=\"status\">\n      {loggedStatus ? <h3>logged in</h3> : <h3>logged out</h3>} \n      </div>\n      </div>\n    </div>\n  );\n}\n\n export default App;\n\n"," export const increment = 'INCREMENT';\n export const decrement = 'DECREMENT';\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const counterReducer = (state = 0, action) => {\n\n    // console.log(action.type);\n    // console.log(state);\n    switch (action.type) {\n        case \"INCREMENT\" :\n           console.log(state)  \n           return state+1;\n        case \"DECREMENT\":\n           console.log(state) \n           return state-1;    \n        default:\n            return state;   \n    }\n\n}\nexport default counterReducer;","const loggedReducer = (state = true,action) => {\n\n     switch(action.type){\n         case 'SIGN_IN':\n             return !state;\n         default:\n             return state;    \n     }\n}\n\nexport default loggedReducer;","import counterReducer from './counter';\nimport loggedReducer from './isLogged';\nimport { combineReducers } from 'redux';\n\nconst allReducers = combineReducers({\n    counter: counterReducer,\n    islogged: loggedReducer \n\n})\n\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore,applyMiddleware, compose } from 'redux';\nimport allReducers from './reducers';\nimport { Provider } from 'react-redux';\nimport thunk  from 'redux-thunk'\n\nconst middleware = [thunk];\nconst store = createStore(\n  allReducers, compose(applyMiddleware(...middleware),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ))\n  \n  \nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}